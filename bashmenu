#!/bin/bash
# shellcheck disable=SC2086

progname="bashmenu"
version=1.0.1

usage() {
	echo "Usage: $progname [OPTIONS] [ARGS]" >&2
	cat >&2 <<-'EOF'

	Options:
	  -b, --border  Add a border
	  -h, --help    Display this help message and exit
	  -v, --version Display version information and exit
	EOF
}

cleanup() {
	tput cnorm
	tput rmcup
	exit
}

init() {
	trap 'cleanup' HUP INT QUIT PIPE TERM
	tput smcup # Alternate screen
	tput civis # Hide cursor
	line=0
	quit=false
	finish=false
}

draw() {
	width=$(tput cols)
	height=$(tput lines)

	clear
	printf "\033[H" # Move cursor to top left

	local i n m s
	n=0
	m=$((${#args[@]} - 1))

	if [ "$border" = true ]; then
		((width -= 2))
		((height -= 2))
		printf "┌"
		for i in $(seq $width); do
			printf "─"
		done
		printf "┐\n"
	fi

	if [ ${#args[@]} -gt $height ]; then
		if ((line > height)); then
			n=$((line - height + 1))
			m=$line
		elif ((line == height)); then
			n=1
			m=$line
		else
			m=$((height - 1))
		fi
	elif [ ${#args[@]} -eq $height ]; then
		m=$((height - 1))
	fi

	for i in $(seq $n $m); do
		s="${args[$i]}"
		[ ${#s} -gt $width ] && s="${s:0:$width}"
		((i != n)) && printf "\n"
		[ "$border" = true ] && printf "│"
		if ((i == line)); then
			printf "\033[7m%-${width}s\033[0m" "$s"
		else
			printf "%-${width}s" "$s"
		fi
		[ "$border" = true ] && printf "│"
	done

	if [ "$border" = true ]; then
		printf "\n└"
		for i in $(seq $width); do
			printf "─"
		done
		printf "┘"
	fi
}

get() {
	local c
	while true; do
		read -r -s -n 1 c
		case "$c" in
			q|Q)
				quit=true
				finish=true
				break
				;;
			j|$'\cj')
				[ $((line + 1)) -lt ${#args[@]} ] && ((line++))
				break
				;;
			k|$'\ck')
				((line != 0)) && ((line--))
				break
				;;
			$'\x1b')
				read -r -s -n 2 c
				case "$c" in
					$'\x5b\x42')
						[ $((line + 1)) -lt ${#args[@]} ] && ((line++))
						break
						;;
					$'\x5b\x41')
						((line != 0)) && ((line--))
						break
						;;
				esac
				;;
			g|'<')
				line=0
				break
				;;
			G|'>')
				line=$((${#args[@]} - 1))
				break
				;;
			'')
				finish=true
				break
				;;
			d|$'\cd')
				((line += height / 2))
				[ $line -gt ${#args[@]} ] && line=$((${#args[@]} - 1))
				break
				;;
			u|$'\cu')
				((line -= height / 2))
				((line < 0)) && line=0
				break
				;;
			f|$'\cf')
				((line += height))
				[ $line -gt ${#args[@]} ] && line=$((${#args[@]} - 1))
				break
				;;
			b|$'\cb')
				((line -= height))
				((line < 0)) && line=0
				break
				;;
		esac
	done
}

main() {
	declare -a args
	border=false
	local optend=false
	while [ $# -ne 0 ]; do
		if [ "$optend" = true ]; then
			args+=("$1")
			shift
		else
			case "$1" in
				--)
					optend=true
					shift
					;;
				-h|--help)
					usage
					exit
					;;
				-v|--version)
					echo "$progname $version"
					exit
					;;
				-b|--border)
					border=true
					shift
					;;
				-*)
					echo "$progname: Unknown option: \"$1\"" >&2
					exit 1
					;;
				*)
					args+=("$1")
					shift
					;;
			esac
		fi
	done

	if [ ${#args[@]} -eq 0 ]; then
		usage
		exit 1
	fi

	local out
	out=$(tty)
	exec 3>&1
	exec > "$out"
	init
	trap 'draw' SIGWINCH
	while true; do
		draw
		get
		[ "$finish" = true ] && break
	done
	tput cnorm
	tput rmcup
	exec >&3-
	[ "$quit" = false ] && echo "${args[$line]}"
}

main "$@"
